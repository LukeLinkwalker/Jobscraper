@using JobScraper.ViewModel.EventArgs;
@using JobScraper.ViewModel;

<form class="input-group input-group-sm" style="padding: 10px;">
    <input class="form-control" @bind-value="KeywordInput" type="text" placeholder="Keyword to filter for" />
    <button class="btn btn-primary" type="reset" @onclick="AddKeyword">Add</button>
</form>
<div class="keyword-list">
    @foreach (string keyword in KeywordFilter)
    {
        <a class="keyword" href="#" @onclick="() => RemoveKeyword(keyword)"><span class="badge bg-primary">@keyword</span></a>
    }
</div>

@code {
    [Parameter]
    public MainViewModel ViewModel { get; set; }

    //[Parameter]
    //public FilterParams FilterParams { get; set; }

    public EventCallback<KeywordArg> AddKeywordCallback { get; set; }

    public EventCallback<KeywordArg> RemoveKeywordCallback { get; set; }

    public string KeywordInput { get; set; }
    public List<string> KeywordFilter = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        // ViewModel -> Component
        ViewModel.OnKeywordRemoved += KeywordRemovedHandler;
        ViewModel.OnKeywordAdded += KeywordAddedHandler;

        // Component -> ViewModel
        //AddKeywordCallback = FilterParams.AddKeywordCallback;
        //RemoveKeywordCallback = FilterParams.RemoveKeywordCallback; 
        AddKeywordCallback = ViewModel.AddKeywordCallback;
        RemoveKeywordCallback = ViewModel.RemoveKeywordCallback;
    }

    // Component -> ViewModel
    private async void AddKeyword()
    {
        KeywordArg args = new KeywordArg();
        args.Keyword = KeywordInput;
        await AddKeywordCallback.InvokeAsync(args);
    }

    private async void RemoveKeyword(string keyword)
    {
        MessageBox.Show("Remove : " + keyword + " from UI");
        KeywordArg args = new KeywordArg();
        args.Keyword = keyword;
        await RemoveKeywordCallback.InvokeAsync(args);
    }

    // ViewModel -> Component
    private void KeywordAddedHandler(object sender, KeywordArg args)
    {
        KeywordFilter.Add(args.Keyword);
    }

    private void KeywordRemovedHandler(object sender, KeywordArg args)
    {
        KeywordFilter.Remove(args.Keyword);
    }
}
